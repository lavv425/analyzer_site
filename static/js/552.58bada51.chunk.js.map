{"version":3,"file":"static/js/552.58bada51.chunk.js","mappings":"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","sources":["Components/GoToTop/GoToTop.jsx","Components/QueryMaker/Selections/SelectTable.jsx","Components/QueryMaker/Selections/SelectFields.jsx","Components/QueryMaker/IndexQM.jsx","Components/SharedComponents.jsx","Components/Table/Table.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\nimport Fab from '@mui/material/Fab';\nimport styled from 'styled-components';\n\nconst StyledButtonUp = styled(Fab)`\n  position: fixed !important;\n  bottom: 5% !important;\n  right: 20px !important;\n  background: #000000e3 !important;\n  cursor: pointer !important;\n  transition: opacity 0.3s ease !important;\n  opacity: ${({ isVisible }) => (isVisible ? '1' : '0')} !important;\n`;\n\nexport default function GoToTop({ classFollowing }) {\n    const [isVisible, setIsVisible] = useState(false);\n\n    useEffect(() => {\n        const toggleVisibility = () => {\n            const tableContainer = document.querySelector('.' + classFollowing);\n            if (tableContainer.scrollTop > 200) {\n                setIsVisible(true);\n            } else {\n                setIsVisible(false);\n            }\n        };\n\n        const tableContainer = document.querySelector('.' + classFollowing);\n        tableContainer.addEventListener('scroll', toggleVisibility);\n\n        return () => {\n            tableContainer.removeEventListener('scroll', toggleVisibility);\n        };\n    }, [classFollowing]);\n\n    const scrollToTop = () => {\n        const tableContainer = document.querySelector('.' + classFollowing);\n        tableContainer.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n    };\n\n    return (\n        <StyledButtonUp name='go-to-top' size=\"small\" isVisible={isVisible} onClick={scrollToTop}>\n            <FontAwesomeIcon icon={faArrowUp} size=\"xl\" style={{ color: '#fff' }} />\n        </StyledButtonUp>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { StyledHeaderDivQuery } from '../../SharedComponents';\n\nconst SelectTable = ({ data, handleSelectTableChange, selectedTable }) => {\n    const [values, setValues] = useState([]);\n    const notToTake = [\n        \"psw_reset_codes\",\n        \"it_chat_ids\",\n        \"access_logs\",\n        \"event_logger\",\n        \"salts\",\n        \"secrets\"\n    ]\n    useEffect(() => {\n        const filteredKeys = Object.keys(data).filter(key => !notToTake.includes(key));\n        setValues(filteredKeys.map(key => ({ value: key, label: key })));\n    }, [])\n\n    return (\n        <StyledHeaderDivQuery className=\"selector-header\">\n            <p>Seleziona la tabella dal menù a tendina</p>\n            <Select\n                options={values}\n                isMulti={false}\n                value={selectedTable}\n                placeholder=\"Seleziona la tabella che vorresti vedere...\"\n                onChange={handleSelectTableChange}\n            />\n        </StyledHeaderDivQuery>\n    );\n}\n\nexport default SelectTable;\n\n","import Select from 'react-select';\nimport { StyledHeaderDivQuery } from '../../SharedComponents';\n\nconst SelectFields = ({ selectedTableFields, selectedFields, handleSelectedFields }) => {\n    return (\n        <StyledHeaderDivQuery className=\"selector-header\">\n            <p>Seleziona i campi necessari</p>\n            <Select\n                options={selectedTableFields.map(field => ({ value: field, label: field }))}\n                isMulti={true}\n                closeMenuOnSelect={false}\n                value={selectedFields}\n                placeholder=\"Seleziona i campi necessari\"\n                onChange={handleSelectedFields}\n            />\n        </StyledHeaderDivQuery>\n    );\n}\n\nexport default SelectFields;","import { useState, useEffect } from \"react\";\nimport SelectTable from \"./Selections/SelectTable\";\nimport SelectFields from \"./Selections/SelectFields\";\nimport Table from \"../Table/Table\";\nimport IAmLoading from \"../IAmLoading/IAmLoading\";\nimport GoToTop from \"../GoToTop/GoToTop\";\nimport styled from \"styled-components\";\nimport { StyledPageContainerQuery, StyledPageContainer } from \"../SharedComponents\";\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\n\nconst StyledMuiAlert = styled(Alert)`\nz-index: 9999999 !important;\nposition: absolute;\nwidth: 100vw;\ntop:0;`;\nconst IndexQM = ({ isFetched, currentFollowingClass, data, handleSelectTableChange, selectedTable, tableIsSelected, selectedTableFields, selectedFields, handleSelectedFields, selectedFieldValues, selectedFieldsObj }) => {\n    const [showAlert, setShowAlert] = useState(false)\n    const [severityCap, setSeverityCap] = useState()\n    const [alertTitleText, setAlertTitleText] = useState()\n    const [alertBodyText, setAlertBodyText] = useState()\n\n\n    useEffect(() => {\n        if (showAlert) {\n            setTimeout(() => {\n                setShowAlert(false);\n            }, 3500);\n        }\n    }, [showAlert])\n\n    useEffect(() => {\n        if (!tableIsSelected && tableIsSelected !== false) { //primo giro di m che è a false\n            setSeverityCap('warning');\n            setAlertTitleText('Attenzione!');\n            setAlertBodyText('La tabella che hai selezionato non ha dati, e non è selezionabile!');\n            setShowAlert(true);\n        }\n    }, [tableIsSelected])\n\n    return (\n        <>\n            {isFetched ? (\n                <>\n                    <GoToTop classFollowing={currentFollowingClass} />\n                    <StyledPageContainerQuery>\n                        <SelectTable data={data} handleSelectTableChange={handleSelectTableChange} selectedTable={selectedTable} />\n                        {tableIsSelected && <SelectFields selectedTableFields={selectedTableFields} selectedFields={selectedFields} handleSelectedFields={handleSelectedFields} />}\n                        {/*<SelectFields*/}\n                    </StyledPageContainerQuery>\n                    <StyledPageContainer>\n                        <Table style={{ marginLeft: '5vw' }} content={selectedFieldsObj} headers={selectedFieldValues} />\n                    </StyledPageContainer>\n                </>\n            ) : (\n                <IAmLoading />\n            )}\n            {showAlert && (\n                <StyledMuiAlert className=\"mui-alert\" severity={severityCap}>\n                    <AlertTitle>{alertTitleText}</AlertTitle>\n                    {alertBodyText}\n                </StyledMuiAlert>\n            )}\n        </>\n    );\n\n};\n\nexport default IndexQM;","import styled from \"styled-components\";\n\nexport const StyledPageContainer = styled.div`\n  margin-left: 5vw;\n  transition: all 0.3s ease;\n`;\n\nexport const StyledPageContainerQuery = styled.div`\n  transition: all 0.3s ease;\n  display:flex;\n  flex-direction: row;\n`;\n\nexport const StyledHeaderDiv = styled.div`\n  padding: 1%;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nexport const StyledHeaderDivQuery = styled.div`\n  width: 30%;\n  padding: 1%;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;","import React, { useEffect, useState } from 'react';\nimport IAmLoading from '../IAmLoading/IAmLoading';\nimport styled from 'styled-components';\n\nconst StyledTableDataContainer = styled.div`\nwidth: 98%;\nborder-radius: 8px;\nmargin: auto;\nbox-shadow: 0px 8px 16px rgba(0, 0, 0, 0.1)`;\n\n\nconst StyledTableShow = styled.div`\nborder-radius: 8px;\noverflow: auto;\nmax-height: calc(100vh - 150px);\n`;\n\nconst StyledDataTable = styled.table`\n    width: 100%;\n    margin: auto;\n    border-collapse: collapse;\n    border-spacing: 0;\n    border-radius: 8px;\n\n    \n    th {\n        // background-color: #ffffff;\n        background-color: #c1c1c1a6;\n        backdrop-filter: blur(5px);    \n        position: sticky;\n        top: 0; \n        padding: 12px 8px;\n        text-align: left; \n        font-weight: bold;\n    }\n\n    td {\n        padding: 12px 8px;\n        text-align: left;\n    }\n\n    tr {\n        background-color: #fff;\n        // background-color: #f0f0f05c;\n    }\n\n    tr:hover {\n        background-color: #f7f7f7;\n    }\n`;\n\nconst StyledH2 = styled.h2`\ntext-align: center;`;\n\nconst StyledRowsCounter = styled.small`\nfloat: right;\n`;\n\nconst Table = ({ content, headers }) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [tBody, setTBody] = useState(null);\n    const [rowsNum, setRowsNum] = useState(0);\n    useEffect(() => {\n\n        const activateLoader = async () => {\n            setIsLoading(true);\n        };\n\n        const makeBody = async (content) => {\n            if (content && content.length) {\n                return content.map((rowData, index) => (\n                    <tr key={index}>\n                        {headers.map((header, headerIndex) => (\n                            <td key={headerIndex}>{rowData[header]}</td>\n                        ))}\n                    </tr>\n                ));\n            } else {\n                return <StyledH2 key={0}>No selection</StyledH2>;\n            }\n        };\n\n\n\n        const fetchTableBody = async () => {\n            await activateLoader();\n            setRowsNum(content.length);\n            const bodyMade = await makeBody(content);\n            setTBody(bodyMade);\n            setIsLoading(false);\n        };\n\n\n        fetchTableBody();\n    }, [content, headers]);\n\n    return (\n        <StyledTableDataContainer className='table-container'>\n            <StyledTableShow className='table-show'>\n                {isLoading ? (\n                    <IAmLoading />\n                ) : (\n                    content && (\n                        <StyledDataTable className='data-table'>\n                            <thead>\n                                <tr>\n                                    {headers.map((header, index) => (\n                                        <th key={index}>{header}</th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>{tBody}</tbody>\n                        </StyledDataTable>\n                    )\n                )}\n            </StyledTableShow>\n            {rowsNum ? <StyledRowsCounter className='rows-counter'>{rowsNum} righe</StyledRowsCounter> : null}\n        </StyledTableDataContainer>\n    );\n};\n\nexport default Table;\n"],"names":["StyledButtonUp","styled","Fab","_templateObject","_taggedTemplateLiteral","_ref","isVisible","GoToTop","_ref2","classFollowing","setIsVisible","useState","useEffect","toggleVisibility","document","querySelector","scrollTop","tableContainer","addEventListener","removeEventListener","_jsx","name","size","onClick","scrollToTop","scrollTo","top","behavior","children","FontAwesomeIcon","icon","faArrowUp","style","color","data","handleSelectTableChange","selectedTable","values","setValues","notToTake","filteredKeys","Object","keys","filter","key","includes","map","value","label","_jsxs","StyledHeaderDivQuery","className","Select","options","isMulti","placeholder","onChange","selectedTableFields","selectedFields","handleSelectedFields","field","closeMenuOnSelect","StyledMuiAlert","Alert","isFetched","currentFollowingClass","tableIsSelected","selectedFieldValues","selectedFieldsObj","showAlert","setShowAlert","severityCap","setSeverityCap","alertTitleText","setAlertTitleText","alertBodyText","setAlertBodyText","setTimeout","_Fragment","StyledPageContainerQuery","SelectTable","SelectFields","StyledPageContainer","Table","marginLeft","content","headers","IAmLoading","severity","AlertTitle","div","_templateObject2","StyledHeaderDiv","_templateObject3","_templateObject4","StyledTableDataContainer","StyledTableShow","StyledDataTable","table","StyledH2","h2","StyledRowsCounter","small","_templateObject5","isLoading","setIsLoading","tBody","setTBody","rowsNum","setRowsNum","async","activateLoader","length","bodyMade","rowData","index","header","headerIndex","makeBody","fetchTableBody"],"sourceRoot":""}